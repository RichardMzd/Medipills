# This workflow will build and test my Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: App Control

on:
  workflow_dispatch: # This enables us to manually trigger the workflow.
  push:
   branches:
     - main

jobs:
  build_test:
    runs-on: macos-latest

    steps:
    # Perform a repository checkout to utilize it within the virtual machine.
    - name: Checkout repository
      uses: actions/checkout@v3

    # Because the GoogleService-Info.plist file contains sensitive information, to ensure security,
    # we have stored it as a secret and regenerated it during the process.
    - name: Set up GoogleService-Info.plist
      env: 
        GOOGLE_SERVICE_INFO: ${{ secrets.GOOGLE_SERVICE_INFO }}
      run: echo "$GOOGLE_SERVICE_INFO" > Medipills/GoogleService-Info.plist
      
      - name: Copy JSON files
        run: |
          cp ./syrup.json /Users/runner/work/Downloads/syrup.json
          cp ./medicine.json /Users/runner/work/Downloads/medicine.json

    # We build the app, to ensure it's working.
    - name: Build Medipills
      run: xcodebuild -scheme Medipills -project Medipills.xcodeproj -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 14 Pro Max" build

    # Unit Testing
    - name: Run Unit Tests
      run: xcodebuild test -scheme Medipills -project Medipills.xcodeproj -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 14 Pro Max" build
